{"_id":"magicli","_rev":"19-1f03f5ec1e8fc302ec18a6132d2d1fd4","name":"magicli","description":"Automagically generates command-line interfaces (CLI) for any module. Expected options and help sections are created automatically based on parameters names, with support to async. It can be installed globally, in order to *execute* any module, or .js fil","dist-tags":{"latest":"0.2.1"},"versions":{"0.0.1":{"name":"magicli","version":"0.0.1","description":"Automagically generates CLI interfaces for any module","main":"lib/magicli.js","scripts":{"test":"mocha ./tests"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"keywords":["bin","cli"],"license":"MIT","dependencies":{"commander":"^2.9.0","inspect-function":"^0.2.1","pipe-functions":"^1.2.0"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"ce042678642c89d642b704282f69a89505f0c8fb","_id":"magicli@0.0.1","_shasum":"a0faaf182523c72af32f3a44175db5e8c3d733fe","_from":".","_npmVersion":"4.5.0","_nodeVersion":"6.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"a0faaf182523c72af32f3a44175db5e8c3d733fe","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.0.1.tgz","integrity":"sha512-/PK1YO8Ic80+0CN+cq3dl0ERhoQ2kfD+OI/IXxFEt+KVnSZQoejwDg3CxRqxuKmfPIsW+TvLxhY3qHj/MYsJ0g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD9+u+xvdWDGdgH4lC9BCdvn6R4qSa1UemsQK/OeRw19gIhAPwGqugauPVUuoJNNBZiFeBsE6oiIFlBi8pdpKOYH7eP"}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/magicli-0.0.1.tgz_1494378129945_0.08396404562518"},"directories":{}},"0.0.2":{"name":"magicli","version":"0.0.2","description":"Automagically generates CLI interfaces for any module","main":"lib/magicli.js","scripts":{"test":"mocha ./tests"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"keywords":["bin","cli"],"license":"MIT","dependencies":{"commander":"^2.9.0","inspect-function":"^0.2.1","pipe-functions":"^1.2.0"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"ad824b28ac2057b5a0a3645919137ef0d36cce6d","_id":"magicli@0.0.2","_shasum":"9096a0c9d6956528e1540dd2fe6f0fd7a3681bee","_from":".","_npmVersion":"4.5.0","_nodeVersion":"6.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"9096a0c9d6956528e1540dd2fe6f0fd7a3681bee","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.0.2.tgz","integrity":"sha512-s44PVxgHaYubTRxkjUiTMa8TIOwfYo0H1oPzANEyaMvAuEH3XmGpDQGd6TzsZauWOY96Srrns+oFvm4C1n0SFw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDEZUdkY44/Rhmn8zkuE9cXQ+WnLCbjLD7hT2RqBk1yFwIgV5YSa+aGsVbivZOd4/4cSpQHUHWuxwRpJ2THvAZ9lJs="}]},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/magicli-0.0.2.tgz_1494378198182_0.9081946902442724"},"directories":{}},"0.0.3":{"name":"magicli","version":"0.0.3","description":"Automagically generates command-line interfaces (CLI), for any module","main":"lib/magicli.js","scripts":{"test":"mocha ./tests"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"keywords":["bin","cli"],"license":"MIT","dependencies":{"commander":"^2.9.0","inspect-function":"^0.2.1","pipe-functions":"^1.2.0"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"7cb0ddd0a22dd34649f75c0b2957749c43430c17","_id":"magicli@0.0.3","_shasum":"3f55eba95ae7eeddf336f98b3922cdcad43e0a33","_from":".","_npmVersion":"4.5.0","_nodeVersion":"6.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"3f55eba95ae7eeddf336f98b3922cdcad43e0a33","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.0.3.tgz","integrity":"sha512-G3x5EbFIHmF4rtGUfq1iuWt/vx6EiLus87UMMo6We0Zt5Xla2SMKbihzrxy74vvvcSPe3KlzgMRCe5K5ZmOI7g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCKY9Kjbl2TSUnAPRfxtF2PLM0BeK5QgdJKIsxnqlcgQwIgEAlC0u4Tqz23/Fd62O5ZPM0ntNuWX0WU2m0iMvpOuMs="}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/magicli-0.0.3.tgz_1494387465939_0.657552188495174"},"directories":{}},"0.0.4":{"name":"magicli","version":"0.0.4","description":"Automagically generates command-line interfaces (CLI), for any module","main":"lib/magicli.js","scripts":{"test":"mocha ./tests"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"keywords":["bin","cli"],"license":"MIT","dependencies":{"commander":"^2.9.0","get-stdin":"^5.0.1","inspect-function":"^0.2.1","pipe-functions":"^1.2.0"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"d1e99804c10424ff9064047a28e796eb1c109b46","_id":"magicli@0.0.4","_shasum":"01d2c9a444bb467c2546bbd908d5dd4084cdf8ea","_from":".","_npmVersion":"4.5.0","_nodeVersion":"6.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"01d2c9a444bb467c2546bbd908d5dd4084cdf8ea","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.0.4.tgz","integrity":"sha512-uyhp3g+Lq9cAgEyudx9hWbxt9glghYjoALqTkHDcMlfHzef3RKpgrX2XifK+aurOuOOX7W0l1xQvCy+A6MlMuA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEDHML0EqSqAgvt+B79BnzEvUnTyQ9ztfQmHKwQYFf1+AiB8Z2DXr3e47lHlo+/bfKaFL7UHB6QGfNIBtD9UI4fkyQ=="}]},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/magicli-0.0.4.tgz_1494551573674_0.2827710772398859"},"directories":{}},"0.0.5":{"name":"magicli","version":"0.0.5","description":"Automagically generates command-line interfaces (CLI), for any module","main":"lib/magicli.js","scripts":{"test":"mocha ./tests"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"keywords":["bin","cli"],"license":"MIT","dependencies":{"commander":"^2.9.0","get-stdin":"^5.0.1","inspect-function":"^0.2.1","pipe-functions":"^1.2.0"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"80af7ed4dcc1abf323524f537d154b2dcdd18f01","_id":"magicli@0.0.5","_shasum":"cee7d0fbb4c70518aacb11ec3eb7e25ff49a4921","_from":".","_npmVersion":"4.5.0","_nodeVersion":"6.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"cee7d0fbb4c70518aacb11ec3eb7e25ff49a4921","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.0.5.tgz","integrity":"sha512-wZbMtnl2v1b+Jp3xlqA9FU/O4I6YhGXR8xSY/eU2+gDAvut/F+W3gl4qs61iL4LELC7jqSAE6aAD5668EbmQHA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICYGgVWyAGYsUI8ZCJfRYco3t1LI/AB5+R31hespufXKAiBfv6IFSq8N52oOT1/AB0uACNvfLlO4lZijSafIsUa1dA=="}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/magicli-0.0.5.tgz_1494561910485_0.561447422252968"},"directories":{}},"0.0.6":{"name":"magicli","version":"0.0.6","description":"Automagically generates command-line interfaces (CLI) for any module. Expected options and help sections are created automatically based on parameters names, with support to async.","main":"lib/magicli.js","scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"repository":{"type":"git","url":"git+https://github.com/DiegoZoracKy/magicli.git"},"keywords":["bin","cli","async","simple","command-line","interface"],"license":"MIT","dependencies":{"cliss":"0.0.2","find-up":"^2.1.0","for-each-property":"0.0.4","inspect-property":"0.0.6"},"devDependencies":{"mocha":"^4.0.1"},"gitHead":"0a3816a014235422950db5a346ef32cb0df01cce","bugs":{"url":"https://github.com/DiegoZoracKy/magicli/issues"},"homepage":"https://github.com/DiegoZoracKy/magicli#readme","_id":"magicli@0.0.6","_npmVersion":"5.5.1","_nodeVersion":"8.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"integrity":"sha512-HycFaEqPRJ9UEbHDGCA0ThRB1F6uZQ+auO9VoX3RPQl5oESQwFH3qbT53R9Ulfw34IACzSrKTYrYqH4YNmiR6Q==","shasum":"49b6264b40abc322fa9880fa16aa252387b8a39f","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.0.6.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDp2iPggz5WKmTKSZZpa1Ka3NlyRjis48YPpMC34DBeWQIhAOclC0AbsS/eDGaKwy1Qc5N9Xj1SCQkQzaAIH114R8yz"}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/magicli-0.0.6.tgz_1509925469400_0.5674274319317192"},"directories":{}},"0.0.7":{"name":"magicli","version":"0.0.7","description":"Automagically generates command-line interfaces (CLI) for any module. Expected options and help sections are created automatically based on parameters names, with support to async.","main":"lib/magicli.js","scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"repository":{"type":"git","url":"git+https://github.com/DiegoZoracKy/magicli.git"},"keywords":["bin","cli","async","simple","command-line","interface"],"license":"MIT","dependencies":{"cliss":"0.0.2","find-up":"^2.1.0","for-each-property":"0.0.4","inspect-property":"0.0.6"},"devDependencies":{"mocha":"^4.0.1"},"gitHead":"a18bfdcbe89feb2d58120c3393736324dace428f","bugs":{"url":"https://github.com/DiegoZoracKy/magicli/issues"},"homepage":"https://github.com/DiegoZoracKy/magicli#readme","_id":"magicli@0.0.7","_npmVersion":"5.5.1","_nodeVersion":"8.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"integrity":"sha512-cDLuv9C3XX1jX8s7gPh8KAygNoXKR60wzcjE7Exa/uIN0aBHvB5uhGr6kWK7Otu4ZmklKv+SoZOPXCcy3kcsAA==","shasum":"354a283a3076e4a9fb4046bcf3561b3cea3e505c","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.0.7.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDdHwRzchGw9LBTECDzZgJxGeRH/7iG4LmTC96ZHXNEfwIhAJOT0U/gT5AxIrgUwzx36Mff4J5fY8f0Amzl4gx8Lsaj"}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/magicli-0.0.7.tgz_1509927228293_0.9061402976512909"},"directories":{}},"0.0.8":{"name":"magicli","version":"0.0.8","description":"Automagically generates command-line interfaces (CLI) for any module. Expected options and help sections are created automatically based on parameters names, with support to async.","main":"lib/magicli.js","scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"repository":{"type":"git","url":"git+https://github.com/DiegoZoracKy/magicli.git"},"keywords":["bin","cli","async","simple","command-line","interface"],"license":"MIT","dependencies":{"cliss":"0.0.2","find-up":"^2.1.0","for-each-property":"0.0.4","inspect-property":"0.0.6"},"devDependencies":{"mocha":"^4.0.1"},"gitHead":"6a32da93599fb9000dc61ce4066130a706df499e","bugs":{"url":"https://github.com/DiegoZoracKy/magicli/issues"},"homepage":"https://github.com/DiegoZoracKy/magicli#readme","_id":"magicli@0.0.8","_npmVersion":"5.5.1","_nodeVersion":"8.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"integrity":"sha512-x/eBenweAHF+DsYy172sK4doRxZl0yrJnfxhLJiN7H6hPM3Ya0PfI6uBZshZ3ScFFSQD7HXgBqMdbnXKEZsO1g==","shasum":"920849cf70736076a6c4aa35d5a6866c807fc07b","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.0.8.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDgPtebnaqz7s9mleDDn+8wKy0j1bpmZOHkU82nTA0vbwIgUu9KPpbgrkv66PMHji8vybKYlvefav78mrom3tQL9P0="}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/magicli-0.0.8.tgz_1510188181928_0.7488596537150443"},"directories":{}},"0.0.9":{"name":"magicli","version":"0.0.9","description":"Automagically generates command-line interfaces (CLI) for any module. Expected options and help sections are created automatically based on parameters names, with support to async.","main":"lib/magicli.js","scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"repository":{"type":"git","url":"git+https://github.com/DiegoZoracKy/magicli.git"},"keywords":["bin","cli","async","simple","command-line","interface"],"license":"MIT","dependencies":{"cliss":"0.0.2","find-up":"^2.1.0","for-each-property":"0.0.4","inspect-property":"0.0.6"},"devDependencies":{"mocha":"^4.0.1"},"gitHead":"042594333b4da2d6962e5f1267c116d656895f50","bugs":{"url":"https://github.com/DiegoZoracKy/magicli/issues"},"homepage":"https://github.com/DiegoZoracKy/magicli#readme","_id":"magicli@0.0.9","_npmVersion":"5.5.1","_nodeVersion":"8.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"integrity":"sha512-c7jgY/C2XpdY63aBaRa5cJV/oJ70hX3hpqb+HYbGHbdIsf9MzFrZQuQotZVlnQwfW8j6JsQqYvjm8Q5ivQOGnA==","shasum":"9f404c358a753306e9f39e689ac6b2ccdb542c8c","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.0.9.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDcx3F6PAhKNx0Av8w+HXyB50MGY00pR919QeVgYhj6tAiEAhitT34Afx8mSbGqf3D7A/BKdPuHaST9aPyBBAAZlirg="}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/magicli-0.0.9.tgz_1513628177144_0.18649810878559947"},"directories":{}},"0.1.1":{"name":"magicli","version":"0.1.1","description":"Automagically generates command-line interfaces (CLI) for any module. Expected options and help sections are created automatically based on parameters names, with support to async.","main":"lib/magicli.js","bin":{"magicli":"bin/cli.js"},"scripts":{"test":"mocha ./tests -b","test-main":"mocha ./tests/main.test.js","test-cli":"mocha ./tests/cli.test.js"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"repository":{"type":"git","url":"git+https://github.com/DiegoZoracKy/magicli.git"},"keywords":["bin","cli","async","simple","command-line","interface"],"license":"MIT","dependencies":{"cliss":"0.0.2","find-up":"^2.1.0","for-each-property":"0.0.4","inspect-property":"0.0.6"},"devDependencies":{"mocha":"^4.0.1"},"gitHead":"a3927f50730a1ad06c89739e92a8a3725f866a41","bugs":{"url":"https://github.com/DiegoZoracKy/magicli/issues"},"homepage":"https://github.com/DiegoZoracKy/magicli#readme","_id":"magicli@0.1.1","_npmVersion":"5.5.1","_nodeVersion":"8.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"integrity":"sha512-j8b5GOz6qhAbVBH0hhMcDec/1ysgHBo3MxlNsaBfS5tOQYD7HOWYEcfLQPyqFbTEuhmI1UPqUs3ipOpNTRFhow==","shasum":"050d37a44da7584dc331fa5cdef8bf841f25ec07","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.1.1.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFrQRSn0U2q5tlzFRTwRQoxaBj76MVv5X5MuvDDaPC7ZAiB8RSfxV9JH0EoApqFoDEgi3nJdkRitON1Cwtd52lkqWQ=="}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/magicli-0.1.1.tgz_1515116682218_0.6816382764372975"},"directories":{}},"0.1.2":{"name":"magicli","version":"0.1.2","description":"Automagically generates command-line interfaces (CLI) for any module. Expected options and help sections are created automatically based on parameters names, with support to async. It can be installed globally, in order to *execute* any module, or .js fil","main":"lib/magicli.js","bin":{"magicli":"bin/cli.js"},"scripts":{"test":"mocha ./tests","test-main":"mocha ./tests/main.test.js","test-cli":"mocha ./tests/cli.test.js"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"repository":{"type":"git","url":"git+https://github.com/DiegoZoracKy/magicli.git"},"keywords":["bin","cli","async","simple","command-line","interface"],"license":"MIT","dependencies":{"cliss":"0.0.2","find-up":"^2.1.0","for-each-property":"0.0.4","inspect-property":"0.0.6"},"devDependencies":{"mocha":"^4.0.1"},"gitHead":"c6651af9893543fa7cf66e46d8ccec6bd9921160","bugs":{"url":"https://github.com/DiegoZoracKy/magicli/issues"},"homepage":"https://github.com/DiegoZoracKy/magicli#readme","_id":"magicli@0.1.2","_npmVersion":"5.5.1","_nodeVersion":"8.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"integrity":"sha512-Lf2GgZ69+NjccRADCzti1UHhgjNWI9QmCDtnrYTpuCij5QRhsjkNDTdTfr/BqWBBS2hnkGJ/kmHEqc4+39+kGA==","shasum":"ad7fa02d87a3f66915efe477888cb1410b514898","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.1.2.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIG8eL+/mlyOhtDv4nDg4iOF9ZE75lC/TY2m/EP7ZYRVCAiAtJD8paDALCWyM6M13QbiK4c/E5hy3LjaKioDRlbCEbQ=="}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/magicli-0.1.2.tgz_1515120065728_0.6269066985696554"},"directories":{}},"0.2.0":{"name":"magicli","version":"0.2.0","description":"Automagically generates command-line interfaces (CLI) for any module. Expected options and help sections are created automatically based on parameters names, with support to async. It can be installed globally, in order to *execute* any module, or .js fil","main":"lib/magicli.js","bin":{"magicli":"bin/cli.js"},"scripts":{"test":"mocha ./tests","test-main":"mocha ./tests/main.test.js","test-cli":"mocha ./tests/cli.test.js"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"repository":{"type":"git","url":"git+https://github.com/DiegoZoracKy/magicli.git"},"keywords":["bin","cli","async","simple","command-line","interface"],"license":"MIT","dependencies":{"cliss":"0.0.7","find-up":"^2.1.0","for-each-property":"0.0.4","inspect-property":"0.0.7"},"devDependencies":{"mocha":"^4.0.1"},"gitHead":"39085e794608a26d00046ebc645949822d0d015b","bugs":{"url":"https://github.com/DiegoZoracKy/magicli/issues"},"homepage":"https://github.com/DiegoZoracKy/magicli#readme","_id":"magicli@0.2.0","_npmVersion":"6.4.1","_nodeVersion":"10.12.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"integrity":"sha512-M53NHF80SqLbzTfq4sHqbDE10cgPJmdJUERFd/4AvueSWPkYj84jtSP03Me+KfWPpf6jL+CqPBqx0cr2x5NZlg==","shasum":"b0d5f8b6755f59200d2d9e6921b745e9c6e30808","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.2.0.tgz","fileCount":24,"unpackedSize":27870,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0ozICRA9TVsSAnZWagAAxMkP/0rAZU2dmyOm4o1nlWPa\nDC96s2otAzRkhO/JxQ8M8prwWLl1amltoISyZvKwXLmzdViSCLGqzxsQ4SiE\n0s6rRhDa1GGUsJ33KHuPdNpA9/cvmWUs5OmLFQQz+pR3RIUkJFou/97Q6QFG\nGL7JhJwUjgkebeQdjbocmk5ymr7ViShyJJOvIWWiTGrbr9gwQcVH2NJKmyVj\nuv7EmLBTCme8DB7BAXKXNSzcWZlfrk9EzIpT+0Y7r+5yzQGoIToOFbPbMeIF\nEMOAxGz6BpJmqHoGPxaKs2Pa49XnnNILfscsTr85lXAvtdqjmUyNPACqfGO7\nhvZ7v7FuhaG7aokjU5TRF+ssr6NNxa0a/bYU0X3Nlgu3FZOUBbM+oiozns43\nrLxvhJ9X+DfbAQpIHEP43sBtMrQSLPHq/MuWN9DJ7A3VnNzduXV34ULOx92U\nAfIxztdh/l0UxK3uoTIS+WTucWMGCvwphsafbLIyBFHnmIAp51kMs0Yag2HQ\nG9E1/ZN6axY5F8ElM8VMaXsSIWwR64Y+15LXtXnr8FfWnFsKcDU/wls94A+/\nNmiSgqOzT8GqoAIOV8muQXCGQjdhH4PcUxIYKJ7vCPYFhUxh+vPHH5bP+dqz\nVEHGyGwcJSdDoTqrpZUnZnKJln8Gc004WQ8KqmSiVndBFLa8ZFxiXBOh5hdz\nuVSd\r\n=pwRx\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFIY8YzeOJ43CVj3OfP+3jRFb65rRlnf+0tbcS8jnNFpAiAWrlm5MSMcY28boMfJKy8q3eUItwTJgPkUJ95VAwDynw=="}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/magicli_0.2.0_1540525255402_0.5932301785283307"},"_hasShrinkwrap":false},"0.2.1":{"name":"magicli","version":"0.2.1","description":"Automagically generates command-line interfaces (CLI) for any module. Expected options and help sections are created automatically based on parameters names, with support to async. It can be installed globally, in order to *execute* any module, or .js fil","main":"lib/magicli.js","bin":{"magicli":"bin/cli.js"},"scripts":{"test":"mocha ./tests","test-main":"mocha ./tests/main.test.js","test-cli":"mocha ./tests/cli.test.js"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"repository":{"type":"git","url":"git+https://github.com/DiegoZoracKy/magicli.git"},"keywords":["bin","cli","async","simple","command-line","interface"],"license":"MIT","dependencies":{"cliss":"0.0.8","find-up":"^2.1.0","for-each-property":"0.0.4","inspect-property":"0.0.7"},"devDependencies":{"mocha":"^4.0.1"},"gitHead":"7c50b8e49dd06b914a93aa1675c723e822d246e3","bugs":{"url":"https://github.com/DiegoZoracKy/magicli/issues"},"homepage":"https://github.com/DiegoZoracKy/magicli#readme","_id":"magicli@0.2.1","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"integrity":"sha512-6sR0xpSDW2Wd5dxu4TLKuI0qcQbU2y+IP5o2hTk/h/MT3PWeiAt0Wa+IqfmDF1vVgbU0e1cP8TM+kbIxOK2o7w==","shasum":"99b989bec423d60ca5b1b97df583a032629cb8d1","tarball":"https://registry.npmjs.org/magicli/-/magicli-0.2.1.tgz","fileCount":24,"unpackedSize":27870,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcdf/nCRA9TVsSAnZWagAAZBYQAJ1vmF1Vl595CLEVqv37\nv3Vc/xgyvRMQaH6HI2w++f7qBa0gEGH0lYx1WiPOMIph4TbTi/tRkfXi8XBO\nniSUIB0W6YlBunw++fGYK6jFQS8r5YrRbIrrwftTskUoPWB8KzLrTiWjldGb\nowSVKpvGoAA7uHRU3rExpB7uPjEFSZdNrLvgQ8OAdeR8gdljnruKZhQ4XndT\nDyOuJgt16jlCn2udwvAVkMGn9ihx+7mBpmR8iAbDZiAZTayAFCwG1Syq5zOJ\ndPT6qTKfqfeqbPFI5geFLrauE9SQtTvEXTAug/nz/d3XFK/wl4Oa5gPzmFTQ\nu38mAOFnNSDOc8TBotMLKoqmvEZTpfLSiUV58y7WjOmnDQ9/Df2AdNgFV0Re\nSi8fOgKv2yt/vVmhd6mONQ7FV0fCvppm6vnoXRb+Ipk5j6x5MQf4DF2oNnRL\nwvFLVGHacijRUYIQB7pCKJQ4r2Pv1TwexlsAg80OQyfHGnb1peUMPYmiV//R\n9IMZRJHhIajqo592YQ5j0w06yz/V4S+m2lvKysJe6QytLshQO/F1aF5pD9+e\n1toPsCs2UIdEwNEjbrOjjZbRJKH3uZoGOH0JgOOGwJ9HnD4P7mzDHWegkq54\nKw14uhEm8rBe9km1Jou9hyOtPKyLEeHVCF1rI19it1n5GT4TL7smSqmr3Own\nv4Zb\r\n=Z+bg\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGC5GvhOcXdlksNi8dDv7wsk4hez6VhIbHsnnPWUth/oAiEA9DR7FMFXn+nRBzLUJ5x/PAnsVLHkXx1uM7u+eXk7hE0="}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/magicli_0.2.1_1551237095052_0.219240300130344"},"_hasShrinkwrap":false}},"readme":"# MagiCLI\n\n[![Build Status](https://api.travis-ci.org/DiegoZoracKy/magicli.svg)](https://travis-ci.org/DiegoZoracKy/magicli) [![npm](https://img.shields.io/npm/v/magicli.svg)]() [![npm](https://img.shields.io/npm/l/magicli.svg)]()\n\nAutomagically generates command-line interfaces (CLI), for any module.\nJust `require('magicli')();` and your module is ready to be executed via CLI.\n\nThe main goal is to have any module prepared to be executed via CLI (installed globally with `-g`, or by using **npx**):\n\nTo see why I believe you should plug it on your module, even if you don't need a CLI (it probably will serve someone on the community), read here: [Introducing MagiCLI: Automagically generates a command-line interface (CLI) for any module\n](https://hackernoon.com/introducing-magicli-automagically-generates-a-command-line-interface-cli-for-any-module-49543e50f86d)\n\n**It can be installed globally, in order to *execute* any module or .js file via CLI.**\n\n## Goals\n\n * Minimal setup (*one line*)\n * Automatic options names based on functions parameters\n * Out of the box support to async functions (`Promises`, or any *thenable* lib)\n * A specific help section for each nested property (*\"subcommands\"*)\n * *Name*, *Description* and *Version* extracted from package.json\n * Simple API to hook into the execution flow (*stdin*, *before*, *after*)\n * Cover all possible cases of module.exports (*Function*, *Object* with nested properties, Destructuring parameters)\n * Provide a CLI to be used to execute any given module or .js file via CLI\n\n## Usage (the most simple and minimal way)\n\n * `npm install magicli`\n * Add the property **bin** to your package.json containing the value **./bin/magicli.js**\n * Create the file **./bin/magicli.js** with the following content:\n\n```javascript\n#!/usr/bin/env node\n\nrequire('magicli')();\n```\n\n**Done!** Install your module with `-g`, or use it via **[npx](http://blog.npmjs.org/post/162869356040/introducing-npx-an-npm-package-runner)**, and run it with `--help` to see the result. The `--version` option will show the same value found at *package.json*. In the same way you can just run `node ./bin/magicli.js --help` to test it quickly, without installing it.\n\nLet's suppose that **your-module** exports the function:\n\n```javascript\nmodule.exports = function(param1, param2) {\n    return param1 + param2;\n}\n```\n\nWhen calling it via CLI, with `--help`, you will get:\n\n```bash\nDescription:\n\n  Same description found at package.json\n\nUsage:\n\n  $ your-module [options]\n\nOptions:\n\n  --param1\n  --param2\n```\n\nThe program will be expecting options with the same name as the parameters declared at the exported function, and it doesn't need to follow the same order. Example:\n\n`$ your-module --param2=\"K\" --param1=\"Z\"` would result in: `ZK`.\n\nImportant: MagiCLI requires the module in order to analyse it, and provide the command-line interface for it. Keep that in mind in case your module does something just by being required.\n\n## Usage via CLI\n\nIn order to **execute** any module or .js file via CLI, install it globally:\n\n```bash\n$ npm install magicli -g\n```\n\nThen just pass in as the first argument, the path to a module or a .js file. Examples:\n * `$ magicli . --help`\n * `$ magicli ./path/to-some-module --help`\n * `$ magicli ./path/to-a-file.js --help`\n\nOr use it via **[npx](http://blog.npmjs.org/post/162869356040/introducing-npx-an-npm-package-runner)** without the need to install it.\n\nLet's suppose that you have a simple .js file as this one:\n\n```javascript\nmodule.exports = {\n\tsum: (n1, n2) => n1 + n2,\n\tec: {\n\t\tho: str => `${str} !!!`\n\t}\n}\n```\n\nJust execute **magicli** on it, as `$ magicli ./path/to-the-file-above.js --help` and you will get:\n\n```bash\nCommands:\n  sum\n  ec-ho\n```\n\n`$ magicli ./path/to-the-file-above.js sum --help` will give you:\n```bash\nUsage:\n  $ sum [options]\n\nOptions:\n  --n1\n  --n2\n```\nand `$ magicli ./path/to-the-file-above.js sum --n1=4 --n2=2` will result in `6`\n\n### How it works\n\nMagiCLI is capable of handling many styles of `exports`, like:\n\n * Functions\n * Object Literal\n * Nested properties\n * Class with static methods\n\nAnd also any kind of parameters declaration (*Destructuring Parameters*, *Rest Parameters*).\n\nIf **your-module** were like this:\n```javascript\n// An Arrow function with Destructuring assignment and Default values\nconst mainMethod = ([p1, [p2]] = ['p1Default', ['p2Default']], { p3 = 'p3Default' } = {}) => `${p1}-${p2}-${p3}`;\n\n// Object Literal containing a nested method\nmodule.exports = {\n\tmainMethod,\n\tnested: {\n\t\tmethod: param => `nested method param value is: \"${param}`\n\t}\n};\n```\n\n`$ your-module --help` would result in:\n\n```bash\nDescription:\n\n  Same description found at package.json\n\nUsage:\n\n  $ your-module <command>\n\nCommands:\n\n  mainMethod\n  nested-method\n```\n\n`$ your-module mainMethod --help` would be:\n\n```bash\nUsage:\n\n  $ your-module mainMethod [options]\n\nOptions:\n\n  --p1\n  --p2\n  --p3\n```\n\n`$ your-module nested-method --help` returns:\n\n```bash\nUsage:\n\n  $ your-module nested-method [options]\n\nOptions:\n\n  --param\n```\n\nCalling *mainMethod* without any parameter:\n`$ your-module mainMethod`\n\nresults in:\n` p1Default-p2Default-p3Default`\n\nWhile defining the parameter for *nested-method*:\n`$ your-module mainMethod nested-method --param=paramValue`\n\nwould return:\n` nested method param value is: \"paramValue\"`\n\nNote: Nested methods/properties will be turned into commands separated by `-`, and it can be configurable via options (`subcommandDelimiter`).\n\n## Usage Options\n`magicli({ commands = {}, validateRequiredParameters = false, help = {}, version = {}, pipe = {}, enumerability = 'enumerable', subcommandDelimiter = '-'})`\n\nOptions are provided to add more information about commands and its options, and also to support a better control of a command execution flow, without the need to change the source code of the module itself (for example, to `JSON.stringify` an `Object Literal` that is returned).\n\n\n\n### enumerability\n\nBy default, only the enumerable nested properties will be considered. The possible values are: `'enumerable'` (default), `'nonenumerable'` or `'all'`.\n\n### validateRequiredParameters\nMagiCLI can validate the required parameters for a command and show the help in case some of them are missing. The default value is `false`.\n\n### help\n\n**help.option**\nTo define a different option name to show the help section. For example, if `'modulehelp'` is chosen, `--modulehelp` must be used instead of `--help` to show the help section.\n\n**help.stripAnsi**\n\tSet to `true` to strip all ansi escape codes (colors, underline, etc.) and output just a raw text.\n\n\n\n### version\n**version.option**\nTo define a different option name to show the version. For example, if `'moduleversion'` is chosen, `--moduleversion` must be used instead of `--version` to show the version number.\n\n### pipe (stdin, before and after)\n\nThe pipeline of a command execution is:\n\n**stdin** (command.pipe.stdin || magicliOptions.pipe.stdin) =>\n\n**magicliOptions.pipe.before** =>\n\n**command.pipe.before** =>\n\n**command.action** (the method in case) =>\n\n**command.pipe.after** =>\n\n**magicliOptions.pipe.after** =>\n\n**stdout**\n\nWhere each of these steps can be handled if needed.\n\nAs it can be defined on *commands* option, for each command, **pipe** can also be defined in *options* to implement a common handler for all commands. The expected properties are:\n\n**pipe.stdin**\n`(stdinValue, args, positionalArgs, argsAfterEndOfOptions)`\n\nUseful to get a value from *stdin* and set it to one of the expected *args*.\n\n**pipe.before**\n`(args, positionalArgs, argsAfterEndOfOptions)`\n\nTo transform the data being input, before it is passed in to the main command action.\n\n**pipe.after**\n`(result, parsedArgs, positionalArgs, argsAfterEndOfOptions)`\n\nNote: **stdin** and **before** must always return *args*, and **after** must always return *result*, as these values will be passed in for the next function in the pipeline.\n\n### commands\nThe options are effortlessly extracted from the parameters names, however it is possible to give more information about a command and its options, and also give instructions to the options parser.\n\n**commands** expects an `Object Literal` where each key is the command name. It would be the module's name for the main function that is exported, and the command's name as it is shown at the *Commands:* section of `--help`. For example:\n```javascript\ncommands: {\n    'mainmodulename': {},\n    'some-nested-method': {}\n}\n```\n\nFor each command the following properties can be configurable:\n\n#### options\nIs an *Array* of *Objects*, where each contains:\n\n**name** (*required*)\nThe name of the parameter that will be described\n\n**required**\nTo tell if the parameter is required.\n\n**description**\nTo give hints or explain what the option is about.\n\n**type**\nTo define how the parser should treat the option (Array, Object, String, Number, etc.).  Check [yargs-parser](https://github.com/yargs/yargs-parser) for instructions about *type*, as it is the engine being used to parse the options.\n\n**alias**\nTo define an alias for the option.\n\n#### pipe (stdin, before and after)\n\nThe pipeline of a command execution is:\n\n**stdin** (command.pipe.stdin || magicliOptions.pipe.stdin) =>\n\n**magicliOptions.pipe.before** =>\n\n**command.pipe.before** =>\n\n**command.action** (the method in case) =>\n\n**command.pipe.after** =>\n\n**magicliOptions.pipe.after** =>\n\n**stdout**\n\nWhere each of these steps can be handled if needed.\n\nAs it can be defined on *options* to implement a common handler for all commands, **pipe** can also be defined for each command.\n\n**pipe.stdin**\n`(stdinValue, args, positionalArgs, argsAfterEndOfOptions)`\n\nUseful to get a value from *stdin* and set it to one of the expected *args*.\n\n**pipe.before**\n`(args, positionalArgs, argsAfterEndOfOptions)`\n\nTo transform the data being input, before it is passed in to the main command action.\n\n**pipe.after**\n`(result, parsedArgs, positionalArgs, argsAfterEndOfOptions)`\n\nNote: **stdin** and **before** must always return *args*, and **after** must always return *result*, as these values will be passed in for the next function in the pipeline.\n\nIf needed, a more thorough guide about this section can be found at [cliss](https://github.com/DiegoZoracKy/cliss) (as this is the module under the hood to handle that)\n\nA full featured use of the module would look like:\n\n```javascript\nmagicli({\n\tcommands,\n\tenumerability,\n\tsubcommandDelimiter,\n\tvalidateRequiredParameters,\n\thelp: {\n\t\toption,\n\t\tstripAnsi\n\t},\n\tversion: {\n\t\toption\n\t},\n\tpipe: {\n\t\tstdin: (stdinValue, args, positionalArgs, argsAfterEndOfOptions) => {},\n\t\tbefore: (args, positionalArgs, argsAfterEndOfOptions) => {},\n\t\tafter: (result, parsedArgs, positionalArgs, argsAfterEndOfOptions) => {}\n\t}\n});\n```\n\n## Example\n\nTo better explain with an example, let's get the following module and configure it with MagiCLI to:\n\n * Define **p1** as `String` (*mainMethod*)\n * Write a description for **p2** (*mainMethod*)\n * Define **p3** as required (*mainMethod*)\n * Get **p2** from stdin (*mainMethod*)\n * Use **before** (command) to upper case **param** (*nested-method*)\n * Use **after** (command) to JSON.stringify the result of (*nested-method*)\n * Use **after** (options) to decorate all outputs (*nested-method*)\n\n**module** (\"main\" property of package.json)\n```javascript\n'use strict';\n\nmodule.exports = {\n\tmainMethod: (p1, p2, { p3 = 'p3Default' } = {}) => `${p1}-${p2}-${p3}`,\n\tnested: {\n\t\tmethod: param => {\n\n\t\t\t// Example of a Promise being handled\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresolve({ param });\n\t\t\t\t}, 2000);\n\t\t\t});\n\t\t}\n\t}\n};\n```\n\n**magicli.js** (\"bin\" property of package.json)\n```javascript\n#!/usr/bin/env node\n\n\nrequire('../magicli')({\n\tcommands: {\n\t\t'mainMethod': {\n\t\t\toptions: [{\n\t\t\t\tname: 'p1',\n\t\t\t\tdescription: 'Number will be converted to String',\n\t\t\t\ttype: 'String'\n\t\t\t}, {\n\t\t\t\tname: 'p2',\n\t\t\t\tdescription: 'This parameter can be defined via stdin'\n\t\t\t}, {\n\t\t\t\tname: 'p3',\n\t\t\t\trequired: true\n\t\t\t}],\n\t\t\tpipe: {\n\t\t\t\tstdin: (stdinValue, args, positionalArgs, argsAfterEndOfOptions) => {\n\t\t\t\t\targs.p2 = stdinValue;\n\t\t\t\t\treturn args;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'nested-method': {\n\t\t\toptions: [{\n\t\t\t\tname: 'param',\n\t\t\t\tdescription: 'Wait for it...'\n\t\t\t}],\n\t\t\tpipe: {\n\t\t\t\tbefore: (args, positionalArgs, argsAfterEndOfOptions) => {\n\t\t\t\t\tif (args.param) {\n\t\t\t\t\t\targs.param = args.param.toUpperCase();\n\t\t\t\t\t}\n\t\t\t\t\treturn args;\n\t\t\t\t},\n\n\t\t\t\tafter: JSON.stringify\n\t\t\t}\n\t\t}\n\t},\n\tpipe: {\n\t\tafter: (result, positionalArgs, argsAfterEndOfOptions) => `======\\n${result}\\n======`\n\t}\n});\n```\n\n## Tests\n\nThere is another repository called [MagiCLI Test Machine](https://github.com/DiegoZoracKy/magicli-test-machine), where many real published modules are being successfully tested. As the idea is to keep increasing the number of real modules tested, it made more sense to maintain a separated repository for that, instead of being constantly increasing the size of MagiCLI itself over time. I ask you to contribute with the growing numbers of those tests by adding your own module there via a pull request.\n\nIf you find some case that isn't being handled properly, please open an *issue* or feel free to create a PR ;)\n","maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"time":{"modified":"2022-06-19T15:20:57.557Z","created":"2017-05-10T01:02:10.203Z","0.0.1":"2017-05-10T01:02:10.203Z","0.0.2":"2017-05-10T01:03:20.475Z","0.0.3":"2017-05-10T03:37:46.186Z","0.0.4":"2017-05-12T01:12:56.213Z","0.0.5":"2017-05-12T04:05:10.710Z","0.0.6":"2017-11-05T23:44:29.516Z","0.0.7":"2017-11-06T00:13:48.376Z","0.0.8":"2017-11-09T00:43:02.013Z","0.0.9":"2017-12-18T20:16:17.210Z","0.1.1":"2018-01-05T01:44:42.311Z","0.1.2":"2018-01-05T02:41:05.795Z","0.2.0":"2018-10-26T03:40:55.494Z","0.2.1":"2019-02-27T03:11:35.199Z"},"keywords":["bin","cli","async","simple","command-line","interface"],"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","readmeFilename":"README.md","homepage":"https://github.com/DiegoZoracKy/magicli#readme","repository":{"type":"git","url":"git+https://github.com/DiegoZoracKy/magicli.git"},"bugs":{"url":"https://github.com/DiegoZoracKy/magicli/issues"},"users":{"bluejeansandrain":true,"goulash1971":true,"hugojosefson":true,"dozierjack":true}}