{"_id":"pipe-functions","_rev":"15-278dd405fdefa2e2d09f687b4a72375c","name":"pipe-functions","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","dist-tags":{"latest":"1.3.0"},"versions":{"1.0.0":{"name":"pipe-functions","version":"1.0.0","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"7928cce5056e9ca30385121550d43e5c5d544847","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.0.0","_shasum":"da1d54af49d4e937369d9ac41d12e0ee4ed34c75","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.5.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"da1d54af49d4e937369d9ac41d12e0ee4ed34c75","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.0.0.tgz","integrity":"sha512-1IJBmuhfdadGkoZv0lGAlKH7vbSHor0BPqbpFVQ/d5FrsF/0Rgf2zk23ajfOK0vd6otBJAPUD37A79MjWMF2qw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFuJgCh3ifK/fIm9cKa8nCKGcl53F1ICyLdy4J+5L7+WAiAGZ17Zgeg0mxL2N/ONa+NzZepIvDLFOywwNbAXqV2jwA=="}]},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/pipe-functions-1.0.0.tgz_1473236077664_0.4576035568024963"}},"1.0.1":{"name":"pipe-functions","version":"1.0.1","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"a71739eb2e2b9196abcc9f09f145ae22f8c13d1e","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.0.1","_shasum":"ae74ed8cd29b1110449b450dd36ec3c2d9342eaa","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.5.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"ae74ed8cd29b1110449b450dd36ec3c2d9342eaa","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.0.1.tgz","integrity":"sha512-vdYQ5pds47MJpTVayMhgg/Ppj06IsIBubDVoyq2ZftZiHHkUjXBquyyqZLCtVF2C6CM9Yyu9VwIIQXdQ4ImJKg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC9fucMlGxGYkKXWQQaM3rPIsmy1BYu+9vZovMMWNvPQwIhAM54ICQ7tY7kHmqSG4fCP9SlbAatSvpfBQbh00HhnXRd"}]},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/pipe-functions-1.0.1.tgz_1473237168956_0.005640133749693632"}},"1.0.2":{"name":"pipe-functions","version":"1.0.2","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"8765145440dcbec287f84e4095d8ad6a059dfa97","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.0.2","_shasum":"5b82d7f52230256d2148e79583503d059390a15a","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.5.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"5b82d7f52230256d2148e79583503d059390a15a","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.0.2.tgz","integrity":"sha512-5y7SUA/CqmqS1iNGVsLi5mi8ag96g2jRttSnja5w4zSxL9IRSxO/Q/jYaWi36QxDZV8yDXzRK1H0hEQetRf7kg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCR7hIvlm2FaiqEgNhB7HWd/n/jPwByHVQVB9i0Qh8GoQIgSwvg0QKcDc9A8BhB8cBk3qpinCAvutMo8H6fuTrm7W0="}]},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/pipe-functions-1.0.2.tgz_1473237287818_0.20981215545907617"}},"1.0.3":{"name":"pipe-functions","version":"1.0.3","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"4f4b56a529e1bd7c6fea5dce45302cadc9461756","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.0.3","_shasum":"ed4c6e9ae69c8419afc7c12fc107f39ca09b0b9e","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.5.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"ed4c6e9ae69c8419afc7c12fc107f39ca09b0b9e","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.0.3.tgz","integrity":"sha512-MduA4I4ePUQo2YJho8j9JuWM7T4nBKuA6c+uNaQm3OjZduC+c/M96ybVotW5Yx3DzFxBMnvunwCAXkZLdcupHQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCSRStytpFM51rvjiYM854tvzuPp8+ZM1M7cyrUPqPCLAIhAJ8882yRK92miNq+L7ufgxiU4pd1adQRX1bWcK+uPLy2"}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/pipe-functions-1.0.3.tgz_1473238786831_0.5372165741864592"}},"1.0.4":{"name":"pipe-functions","version":"1.0.4","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"a1231fe3b512d40e0a9a872e1c7774f231a7e01c","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.0.4","_shasum":"22eca7b772e410d233f9ecdc05b2f2e86e80d1da","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.5.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"22eca7b772e410d233f9ecdc05b2f2e86e80d1da","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.0.4.tgz","integrity":"sha512-CosNHUfgNOMLW9DAyNY9dWLdFzikc/iVRIJro3bF/OOqvKOt4npjc/Efdj1efXTDKWLrPvk81DY00xxBUgV/FA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIH9JdYtRgtwF1S8hQ7AR59/McF2ToDTvhc9EZP18P8bnAiEAjND5F7NwbRcKs5YoIc39m1ASpe7eC1btvYPfYunX5uo="}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/pipe-functions-1.0.4.tgz_1473239289371_0.043685419019311666"}},"1.1.0":{"name":"pipe-functions","version":"1.1.0","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"54194e3c62576f1c71521797ceb6377a7d21e0e7","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.1.0","_shasum":"a328a2f8295a284bc4e3c29d7879071416e89690","_from":".","_npmVersion":"3.10.6","_nodeVersion":"6.5.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"shasum":"a328a2f8295a284bc4e3c29d7879071416e89690","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.1.0.tgz","integrity":"sha512-WEiOgckvECKjUh010GF/O4PQB86x5oajXqf1zBCJguMFYuR6Jwuy82KkVDtv8EiGg5D70V9cW34URzXMdnj7+g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGfNkp3T14HQLBMwtbmqDN0wVs44G/wzz0nLIToK3aIJAiBXLkBW1pnkmbaWDpo5B2FXZYjjXHhhHvEaaL2RxaK6lg=="}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/pipe-functions-1.1.0.tgz_1473343156066_0.778942215256393"}},"1.1.1":{"name":"pipe-functions","version":"1.1.1","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"c5a87a6be640f1f1151ff168db15c2459a3ec0e0","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.1.1","_shasum":"5c115fdd7f6fee2cf73ddcc68610181f49b370b4","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.5.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"5c115fdd7f6fee2cf73ddcc68610181f49b370b4","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.1.1.tgz","integrity":"sha512-6wr388OCT5nYutWxEqBCvZ0CtUQ/jilphoU9UZszG9J9FHb6cqXlnsgPUiqQEy/c/CEp3OE3aV92sm3ESHm1aw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGBAkkfzRIQZzibQg1jAIpslNGneHUXtgxrzc2LxarfMAiEA2imHgMPvTwEaf4V37LgOSFrv0JZTAs+2eeiY2Orb4Xk="}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/pipe-functions-1.1.1.tgz_1473971654847_0.3997633452527225"}},"1.1.2":{"name":"pipe-functions","version":"1.1.2","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"0d39f840fe5fbe9d5d295c324d58ed9670f7b75c","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.1.2","_shasum":"8574e00c1a0fa103d73c1bcf3c44c6bd2fa8388f","_from":".","_npmVersion":"4.5.0","_nodeVersion":"6.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"8574e00c1a0fa103d73c1bcf3c44c6bd2fa8388f","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.1.2.tgz","integrity":"sha512-/3L5QQlts/69ttjyPDCfb2sOTkiyLvP9fs38yDfyj9Kn9BN5sRqPQbhRnXM4RlX4j04GMkvC7SGaP1MmexOidw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC9md/9CwVX1Lus3yZSYy11xM0sjBI+ef9dpD9WvcJVawIgAPu5jWQzGK/k3EJ66PvUsa4oxLgWqDIcDIN44czVU18="}]},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/pipe-functions-1.1.2.tgz_1494212465090_0.8715143795125186"}},"1.2.0":{"name":"pipe-functions","version":"1.2.0","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"2df338fd18c6c4ad0dc48557d001ca1d722538a2","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.2.0","_shasum":"b672fe1f52663833e5f97f7a3df73c3f183cbc61","_from":".","_npmVersion":"4.5.0","_nodeVersion":"6.9.0","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"dist":{"shasum":"b672fe1f52663833e5f97f7a3df73c3f183cbc61","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.2.0.tgz","integrity":"sha512-hUm3BlDnVFh0Mc674J8XLo4mzCOKVUFbSycLcrclL3g3FbtxRDwhEEu4yUOwV2/JiF3VBnPLE/bLX3HqpIHq3Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCdi+QaeQgi5jYM2UyxDmqbsrsJ1TZ/DaJMF1Abc0FnwgIhALC6Jj2f0Trnhz7HL7WXzU2OgUxg7Fw7jNiDgHvjtPlx"}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/pipe-functions-1.2.0.tgz_1494287284198_0.05451839463785291"}},"1.2.1":{"name":"pipe-functions","version":"1.2.1","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"a4f3e28e664bd9e1ab137c70ccc5f2c249dceaab","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.2.1","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"integrity":"sha512-GGwcqsAjIxL8CTLgoimdQUclbN3Zc1V47ww+kbyZxc6DcxNlz3QxDoRWmB0Rhi3fgFjMJ9fH7haLTwVUY09VXg==","shasum":"9b5ceb40d8f785e66abeef52460f41a6a8b8c445","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.2.1.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGVBFbILNQYL/AEZ4/lhnckJUhDUsUIxI4j0vDhBx+hQAiEAxhno6Qn+d0paEUR9DK42QFf5NT8ET/qEv/UerCY8FXI="}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pipe-functions-1.2.1.tgz_1502983953746_0.9464620924554765"}},"1.3.0":{"name":"pipe-functions","version":"1.3.0","description":"Pipe functions in a Unix-like style. It supports Promises (async) anywhere in the pipeline and every step will be executed sequentially. The return (resolve in case of Promises) of each function will be passed in as an argument to the next one","homepage":"https://github.com/DiegoZoracKy/pipe-functions/","main":"./lib/pipe.js","author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"keywords":["pipe","pipe functions","promises","sync","async"],"scripts":{"test":"mocha ./tests/main.test.js","test:all":"mocha ./tests -b"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.0.2"},"gitHead":"33531f027a2dcea6355d3a279b58e1570e0eb371","bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"_id":"pipe-functions@1.3.0","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"diegozoracky","email":"diego.zoracky@gmail.com"},"dist":{"integrity":"sha512-6Rtbp7criZRwedlvWbUYxqlqJoAlMvYHo2UcRWq79xZ54vZcaNHpVBOcWkX3ErT2aUA69tv+uiv4zKJbhD/Wgg==","shasum":"d2846db34ff29481dc9318a2a210cb06abbf6e52","tarball":"https://registry.npmjs.org/pipe-functions/-/pipe-functions-1.3.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD8XXhKncIz62X4CN0wE7oBhlhRs1PZNhoLv0imL53s3gIgViT504wgIhG7Tgv6HhwL7nDxd4S+TmBvOBKfhtSfp8U="}]},"maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pipe-functions-1.3.0.tgz_1503080356729_0.6053116926923394"}}},"readme":"# pipe-functions\r\n\r\n[![Build Status](https://api.travis-ci.org/DiegoZoracKy/pipe-functions.svg)](https://travis-ci.org/DiegoZoracKy/pipe-functions)\r\n\r\nPipe functions in a Unix-like style. It supports `Promises` (async) anywhere in the pipeline and every step will be executed sequentially. The *return* (*resolve* in case of `Promises`) of each function will be passed in as an argument to the next one\r\n\r\nKey features:\r\n- Supports `Promises`, or any lib following the Promises/A+ spec about being *thenable* (**.then()** method)\r\n- `Promises` will be executed sequentially\r\n- First argument can be of any type (`String`, `Number`, `Date`, etc.) or even a `Function` or a `Promise`\r\n- Node.js and Browser ready (to be used on a Browser, without a build step, check `lib/pipe-non-es6.js`)\r\n- Lightweight, **501 bytes**, before gzip!\r\n\r\n## Install\r\n\r\n### NPM / Node\r\n\r\n```javascript\r\nnpm install pipe-functions\r\n```\r\n\r\n## Usage\r\n\r\n### Sync\r\n\r\n```javascript\r\nconst pipe = require('pipe-functions');\r\n\r\n// First argument can be of any type\r\nconst result = pipe('input', fn1, fn2, fnN);\r\n// And also a function\r\nconst result2 = pipe(fn0, fn1, fn2, fnN);\r\n```\r\n\r\n### Async (`Promises`)\r\n\r\nIf the pipeline contains a `Promise` anywhere in the pipeline, we must treat `pipe` like a `Promise` itself, so we must to use **.then()** to get the final result.\r\n\r\n```javascript\r\nconst pipe = require('pipe-functions');\r\n\r\n// First argument can be of any type, as shown in the previous example\r\npipe('input', fn1, fnPromise1, fn2, fnPromise2).then(console.log);\r\n```\r\n\r\nA suggestion regarding `Promises`. Probably you've seen, or had to write, a stack of promises like that:\r\n\r\n```javascript\r\nsomeAsyncFunction('param')\r\n  .then(doSomethingWithTheResult)\r\n  .then(doSomethingElseWithTheResultOfTheLast)\r\n  .then(oneMore)\r\n  .then(almostThere)\r\n  .then(done)\r\n  .catch(console.log)\r\n```\r\n\r\nIt could be written as:\r\n\r\n```javascript\r\nconst pipe = require('pipe-functions');\r\n\r\npipe(\r\n    someAsyncFunction('param'),\r\n    doSomethingWithTheResult,\r\n    doSomethingElseWithTheResultOfTheLast,\r\n    oneMore,\r\n    almostThere,\r\n    done\r\n).catch(console.log)\r\n```\r\n\r\n\r\n## Examples\r\n\r\nOBS: Some examples needs a platform with support for *Destructuring* (Nodejs v6+, Chrome).\r\n\r\n### Sync\r\n\r\n```javascript\r\nconst pipe = require('pipe-functions');\r\n\r\n/** Functions **/\r\nconst capitalize = v => v[0].toUpperCase() + v.slice(1);\r\nconst quote = v => `\"${v}\"`;\r\n\r\n/** Pipe **/\r\n// result will be: \"Time\"\r\nconst result = pipe('time', capitalize, quote);\r\n```\r\n\r\n### Async (`Promises`)\r\n\r\n```javascript\r\nconst pipe = require('pipe-functions');\r\n\r\n/** Functions **/\r\n// Sync\r\nconst capitalize = v => v[0].toUpperCase() + v.slice(1);\r\n// Async\r\nconst fetchAndSetBandName = v => new Promise((resolve, reject) => setTimeout(() => resolve(`Pink Floyd - ${v}`), 1000));\r\n\r\n/** Pipe **/\r\n// the result will be: Pink Floyd - Time\r\npipe('time', capitalize, fetchAndSetBandName).then(console.log)\r\n```\r\n#### Example with destructuring,\r\n\r\nTo easily pass in more than one value (within an Object or Array) through the pipeline.\r\n\r\n```javascript\r\nconst pipe = require('pipe-functions');\r\n\r\n/** Functions **/\r\n// Async\r\nconst fetchBandName = ({ song }) => new Promise((resolve, reject) =>\r\nsetTimeout(() => resolve({ song, band: 'Pink Floyd' }), 1000));\r\n// Sync\r\nconst concatBandAndSong = ({ song, band }) => `${band} - ${song}`;\r\n\r\n/** Pipe **/\r\n// the result will be: Pink Floyd - Time\r\npipe('time', fetchBandName, concatBandAndSong).then(console.log)\r\n```","maintainers":[{"name":"diegozoracky","email":"diego.zoracky@gmail.com"}],"time":{"modified":"2022-06-24T00:30:41.500Z","created":"2016-09-07T08:14:38.715Z","1.0.0":"2016-09-07T08:14:38.715Z","1.0.1":"2016-09-07T08:32:50.019Z","1.0.2":"2016-09-07T08:34:48.854Z","1.0.3":"2016-09-07T08:59:48.552Z","1.0.4":"2016-09-07T09:08:10.851Z","1.1.0":"2016-09-08T13:59:17.411Z","1.1.1":"2016-09-15T20:34:16.552Z","1.1.2":"2017-05-08T03:01:07.611Z","1.2.0":"2017-05-08T23:48:04.451Z","1.2.1":"2017-08-17T15:32:33.840Z","1.3.0":"2017-08-18T18:19:17.096Z"},"homepage":"https://github.com/DiegoZoracKy/pipe-functions/","keywords":["pipe","pipe functions","promises","sync","async"],"repository":{"type":"git","url":"git://github.com/DiegoZoracKy/pipe-functions.git"},"author":{"name":"Diego ZoracKy","email":"diego.zoracky@gmail.com","url":"https://github.com/DiegoZoracKy/"},"bugs":{"url":"https://github.com/DiegoZoracKy/pipe-functions/issues"},"license":"MIT","readmeFilename":"README.md","users":{"meeh":true}}